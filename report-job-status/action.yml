name: 'Report failed job to VK Teams chat'
description: >
  This action composes a message about the failed job and sends it to
  the specified VK Teams chat

inputs:
  api-url:
    description: Bot API URL
    required: false
    default: 'https://api.internal.myteam.mail.ru/bot/v1/'
  bot-token:
    description: Bot token
    required: true
  chat-id:
    description: Notification chat ID (or stamp from chat URL)
    required: true
  job-steps:
    description: >
      Info about steps in JSON format that have been run in the job.
      It must be always `ToJson(steps)` expression if you provide steps info
    required: false
    default: '{}'

runs:
  using: composite
  steps:
    - name: Prepare commit message
      id: prepare-commit-msg
      run: echo "::set-output name=commit-msg::${COMMIT_MSG//'`'/<BACKTICK>}"
      env:
        COMMIT_MSG: |
          ${{ github.event.head_commit.message }}
      shell: bash

    - name: Compose message about job failure
      id: compose-message
      uses: actions/github-script@v6
      with:
        script: |
          const steps = ${{ inputs.job-steps }}
          const event = "${{ github.event_name }}"
          const headRef = "${{ github.head_ref }}"
          const refType = "${{ github.ref_type }}"
          const refName = "${{ github.ref_name }}"

          let refTypeUrlPart = ""
          let failedSteps = ""
          let failedStepsMsg = "---------------- Failed steps info -------------------"
          let baseUrl = "https://github.com"

          if (event == "pull_request") {
            refTypeUrlPart = headRef
          } else {
            if (refType == "branch") {
              refTypeUrlPart = "tree/" + refName
            } else {
              refTypeUrlPart = "releases/tag/" + refName
            }
          }

          // Commit message must be wrapped into backticks because it can be
          // a multiline.
          commitString = `${{ steps.prepare-commit-msg.outputs.commit-msg }}`
            .split("\n")[0]
            .replaceAll("<BACKTICK>", "`")

          Object.keys(steps).forEach(function(key) {
            if (steps[key]["conclusion"] == "failure") {
              failedSteps += "\n" + String(key) + ": " + 
                JSON.stringify(steps[key])
            }
          })
          if (failedSteps != "") {
            failedStepsMsg += failedSteps
          } else {
            failedStepsMsg = ""
          }
          
          let message = `ðŸ”´ Job failed at <a href="${baseUrl}/${{ github.repository }}/">${{ github.repository }}</a>:
          <b>Job</b>: <a href="${baseUrl}/${{ github.repository }}/actions/runs/${{ github.run_id }}">${{ github.job }}</a>
          <b>Commit</b>: <a href="${baseUrl}/${{ github.repository }}/commit/${{ github.sha }}">${{ github.sha }}</a>
          <b>${refType[0].toUpperCase()}${refType.slice(1)}</b>: <a href="${baseUrl}/${{ github.repository }}/${refTypeUrlPart}">${refName}</a>
          <b>History</b>: <a href="${baseUrl}/${{ github.repository }}/commits/${{ github.sha }}">commits</a>
          <b>Triggered on</b>: ${event}
          <b>Committer</b>: ${{ github.actor }}
          <b>Commit message subject</b>: ${commitString}
          <code>${failedStepsMsg}</code>`
          return message
        result-encoding: string

    - name: Send message
      uses: dasshit/myteam-notify@1.4
      with:
        api-url: ${{ inputs.api-url }}
        bot-token: ${{ inputs.bot-token }}
        chat-id: ${{ inputs.chat-id }}
        msg-text: ${{ steps.compose-message.outputs.result }}
