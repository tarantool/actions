name: Get information about a pull request
description: >
  This action provides information about a pull request,
  analogous to `github.pull_request` context in workflows,
  triggered by `pull_request` events

inputs:
  repository:
    description: Repository name (<owner>/<repo>)
    required: true
  pr_number:
    description: Pull request number
    required: true
  token:
    description: GitHub personal access token (PAT)
    required: false
    default: ${{ github.token }}
  set_env:
    description: Set environment variables
    required: false
    default: 'true'

outputs:
  base_repo:
    description: Owner/name of the main repository, where the pull request is opened
    value: ${{ fromJSON(steps.get-info.outputs.result).base_repo }}
  base_ref:
    description: The target branch of the pull request
    value: ${{ fromJSON(steps.get-info.outputs.result).base_ref }}
  base_sha:
    description: The target branch HEAD commit's SHA
    value: ${{ fromJSON(steps.get-info.outputs.result).base_sha }}
  head_repo:
    description: Owner/name of the repository with the feature branch
    value: ${{ fromJSON(steps.get-info.outputs.result).head_repo }}
  head_ref:
    description: The feature branch of the pull request
    value: ${{ fromJSON(steps.get-info.outputs.result).head_ref }}
  head_sha:
    description: The feature branch HEAD commit's SHA
    value: ${{ fromJSON(steps.get-info.outputs.result).head_sha }}
  merge_commit_sha:
    description: SHA of the merge commit
    value: ${{ fromJSON(steps.get-info.outputs.result).merge_commit_sha }}


runs:
  using: composite
  steps:
    - name: >
        Fetch information about pull request #${{ inputs.pull_request_number }} 
        in ${{ inputs.repository }}
      id: get-info
      uses: actions/github-script@v6
      continue-on-error: false
      with:
        github-token: ${{ inputs.token }}
        script: |
          const fullRepoName = "${{ inputs.repository }}".split("/")
          const response = await github.request('/repos/{owner}/{repo}/pulls/{pr_number}', {
            owner: fullRepoName[0],
            repo: fullRepoName[1],
            pr_number: "${{ inputs.pr_number }}"
          })
          console.log(response.data)
          const data = {
            "base_repo": response.data.base.repo.full_name,
            "base_ref": response.data.base.ref,
            "base_sha": response.data.base.sha,
            "head_repo": response.data.head.repo.full_name,
            "head_ref": response.data.head.ref,
            "head_sha": response.data.head.sha,
            "merge_commit_sha": response.data.merge_commit_sha,
          }
          return data

    - name: Set environment variables
      if: inputs.set_env == 'true'
      shell: bash
      run: |
        echo "BASE_REPO=${{ fromJSON(steps.get-info.outputs.result).base_repo }}" >> $GITHUB_ENV
        echo "BASE_REF=${{ fromJSON(steps.get-info.outputs.result).base_ref }}" >> $GITHUB_ENV
        echo "BASE_SHA=${{ fromJSON(steps.get-info.outputs.result).base_sha }}" >> $GITHUB_ENV
        echo "HEAD_REPO=${{ fromJSON(steps.get-info.outputs.result).head_repo }}" >> $GITHUB_ENV
        echo "HEAD_REF=${{ fromJSON(steps.get-info.outputs.result).head_ref }}" >> $GITHUB_ENV
        echo "HEAD_SHA=${{ fromJSON(steps.get-info.outputs.result).head_sha }}" >> $GITHUB_ENV
        echo "MERGE_COMMIT_SHA=${{ fromJSON(steps.get-info.outputs.result).merge_commit_sha }}" >> $GITHUB_ENV
